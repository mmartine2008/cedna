<script type="text/javascript" src="<?= $this->basePath('/js/operation/permits/forms/jquery.multi-select.js') ?>"></script>
<form method="post"  id="formFormulario" name="formFormulario" 
       enctype="multipart/form-data">
    <div class="form-row" id="divFormulario"></div>  
    <input type="hidden" name="JsonData" id="JsonData">
    <input type="hidden" name="archivos" id="archivos">
</form>
<script>
    var formulario = <?= $formulario ?>;
    var listMultipleSelectDestino0 = [];
    var listMultipleSelectDestino1 = [];
    var listaRespuestasInput = [];
    var listaDivImagen = [];
    var destinos = <?= json_encode($destinos) ?>;
    var listaFileInput = [];
    var idRelevamiento = <?= $idRelevamiento ?>;
    var enEdicion = <?= $enEdicion ?>;

    function updateAnswerOfPreguntaGenerada(pregGeneradas, idPregunta, answer) {
        for (var k = 0; k < pregGeneradas.length; k++){ 
            var pregGenerada = pregGeneradas[k].preguntaGenerada;
            if(pregGenerada.idPregunta == idPregunta) {
                pregGenerada.respuesta = answer;
                return true;
            }
        }
        return false;
    }

    function updateAnswerOfJson(preguntas, idPregunta, answer, encontre){
        for (var j = 0; j < preguntas.length; j++){
            var pregGeneradas = preguntas[j].preguntasGeneradas;
            if(preguntas[j].idPregunta == idPregunta){
                preguntas[j].respuesta = answer ;
                encontre = true;
            }
            if((!encontre) && (pregGeneradas) ){
                encontre = updateAnswerOfPreguntaGenerada(pregGeneradas, idPregunta, answer);
            }
        }
    }

    function updateJson(idSeccion, idPregunta, answer) {
        var childs = formulario.secciones;
        var encontre = false;
        for (var i = 0; i < childs.length; i++){
            if(childs[i].id == idSeccion){
                var preguntas = childs[i].preguntas;
                //seccionPregunta = childs[i].seccionespreguntas;
                //
                updateAnswerOfJson(preguntas, idPregunta, answer, encontre); 
            }
        }
    }

    function updateStateOfPreguntaGenerada(preguntasGeneradas, question, info){
        for (var k = 0; k < preguntasGeneradas.length; k++){
            var preguntaGenerada = preguntasGeneradas[k];
            if(question.idPreguntaGenerada == preguntaGenerada.idPreguntaGenerada){
                preguntaGenerada.estado = info;
            }
        }
    }

    function updateJsonQuestionOfPreguntaGenerada(idPregunta, question, info) {
        for (var j = 0; j < preguntas.length; j++){
            if(preguntas[j].idPregunta == idPregunta){
                var preguntasGeneradas = preguntas[j].preguntasGeneradas;
                updateStateOfPreguntaGenerada(preguntasGeneradas, question, info)
            }
        }
    }

    function updateJsonOfPreguntaGenerada(idSeccion, idPregunta, question, info) {
        childs = formulario.secciones;
        for (var i = 0; i < childs.length; i++){
            if(childs[i].id == idSeccion){
                preguntas = childs[i].preguntas;
                updateJsonQuestionOfPreguntaGenerada(idPregunta, question, info);
            }
        }
    }

    function getState(preguntasGeneradas, question){
        for (var k = 0; k < preguntasGeneradas.length; k++){
            var preguntaGenerada = preguntasGeneradas[k];
            if(question.idPreguntaGenerada == preguntaGenerada.idPreguntaGenerada){
                return preguntaGenerada.estado;
            }
        }
    }

    function getStateOfPreguntaGenerada(preguntas, idPregunta, question){
        for (var j = 0; j < preguntas.length; j++){
            if(preguntas[j].idPregunta == idPregunta){
                var preguntasGeneradas = preguntas[j].preguntasGeneradas;
                var state = getState(preguntasGeneradas, question);
                return state;
            }
        }
    }
    function getStatePreguntaGeneradaOfJSON(idSeccion, idPregunta, question) {
        childs = formulario.secciones;
        for (var i = 0; i < childs.length; i++){
            if(childs[i].id == idSeccion){
                preguntas = childs[i].preguntas;
                var state = getStateOfPreguntaGenerada(preguntas, idPregunta, question);
                return state;
            }
        }
    }
    
    function getOptionOfMultiSelectQuestion(preguntas, idPregunta, idSelector) {
        for (var j = 0; j < preguntas.length; j++){
            if(preguntas[j].idPregunta == idPregunta){
                var resp = preguntas[j].respuesta;
                for (var k = 0; k < resp.length; k++){
                    if(resp[k].destino == idSelector) {
                        var opciones = resp[k].opcion;
                    }
                }
            }
        }
        return opciones;
    }

    function getOptionsOfMultiSelectOfJson(idSelector, idSeccion, idPregunta){
        var output = [];
        var childs = formulario.secciones;
        for (var i = 0; i < childs.length; i++){
            if(childs[i].id == idSeccion){
                var preguntas = childs[i].preguntas;
                var opciones = getOptionOfMultiSelectQuestion(preguntas, idPregunta, idSelector);
            }
        }
        return opciones;
    }

    function createJSONOptions(opciones){
        var array = [];
        for(var i=0 ; i < opciones.length; i++){
            array.push('{"id": ' + opciones[i][0] +', "descripcion": "' + opciones[i][1] +'" }');
        }
        array.join(',');
        return '[' + array + ']';
    }

    function getJsonAnswerOfQuestion(opciones, resp, borrarAnteriores){
        jsonOption = createJSONOptions(opciones);
        var obj = JSON.parse(jsonOption);
        if(!borrarAnteriores){
            opcionesAnt = resp.opcion;
            for (var z = 0; z < opcionesAnt.length; z++){
                console.log(opcionesAnt[z]);
                obj.push(opcionesAnt[z]);
            }
        }

        return obj
    }

    function updateSelectAnswerOfQuestion(resp, idSelector, borrarAnteriores, opciones) {
        console.log(resp);
        for (var k = 0; k < resp.length; k++){
            if(resp[k].destino == idSelector) {
                resp[k].opcion = getJsonAnswerOfQuestion(opciones, resp[k], borrarAnteriores);
            }
        }
    }

    function updateSelectAnswerOfPreguntaGenerada(pregGeneradas, idSelector, idPregunta, borrarAnteriores, opciones) {
        for (var z = 0; z < pregGeneradas.length; z++){ 
            var pregGenerada = pregGeneradas[z].preguntaGenerada;
            if(pregGenerada.idPregunta == idPregunta) {
                updateSelectAnswerOfQuestion(pregGenerada.respuesta, idSelector, borrarAnteriores, opciones);
                return true;
            }
        }
        return false;
    }

    function updateSelectAnswersOfSection(seccion, idSelector, opciones, idSeccion, idPregunta, borrarAnteriores, encontre){
        var preguntas = seccion.preguntas;
        for (var j = 0; j < preguntas.length; j++){
            if(preguntas[j].idPregunta == idPregunta){
                encontre =  true;
                console.log(preguntas[j].respuesta);
                updateSelectAnswerOfQuestion(preguntas[j].respuesta, idSelector, borrarAnteriores, opciones);
            }
            var pregGeneradas = preguntas[j].preguntasGeneradas
            if((!encontre) && (pregGeneradas) ){
                encontre = updateSelectAnswerOfPreguntaGenerada(pregGeneradas, idSelector, idPregunta, borrarAnteriores, opciones);
            }
        }
    }

    function updateSelectAnswerOfJson(idSelector, opciones, idSeccion, idPregunta, borrarAnteriores) {
        var childs = formulario.secciones;
        var encontre = false;
        for (var i = 0; i < childs.length; i++){
            if(childs[i].id == idSeccion){
                updateSelectAnswersOfSection(childs[i], idSelector, opciones, idSeccion, idPregunta, borrarAnteriores, encontre);
            }
        }
    }
////////////////////////////////
    function updateIdDestinoJsonSelectores(idSeccion, idPregunta) {
        var childs = formulario.secciones;
        for (var i = 0; i < childs.length; i++){
            if(childs[i].id == idSeccion){
                var preguntas = childs[i].preguntas;
                for (var j = 0; j < preguntas.length; j++){
                    if(preguntas[j].idPregunta == idPregunta){
                        var resp = preguntas[j].respuesta;
                        for (var k = 0; k < resp.length; k++){
                            var idSelectorJSON = resp[k].destino+"_seccion_"+idSeccion;
                            resp[k].destino = idSelectorJSON;
                        }
                    }
                }
            }
        }
    }

    function generateQuestionsBlock(preguntasGeneradas, divElement, idSeccion){
        for(var i = 0; i < preguntasGeneradas.length; i++){
            var question = preguntasGeneradas[i];
            var div = document.createElement("Div");
            var idDiv = "div_id_"+question.idPreguntaGenerada;
            div.id = idDiv;
            div.style.display = question.estado;
            divElement.appendChild(div);
            createOneQuestion(idSeccion, question.preguntaGenerada, div);
        }
    }

    function eliminarElementoLista(elemento, lista) {
        var pos = lista.indexOf(elemento);
        if(pos != -1) {
            lista.splice(pos, 1); 
        }  
    }

    function eliminarElementoListasRequired(idPregunta) {
        eliminarElementoLista(idPregunta, listaRespuestasInput);
        eliminarElementoLista(idPregunta, listMultipleSelectDestino0);
        eliminarElementoLista(idPregunta, listMultipleSelectDestino1);
    }

    function quitarPreguntasGeneradasListaRequired(idSeccion, preguntasGeneradas) {
        // for(var i = 0; i < preguntasGeneradas.length; i++){ 
        idPregunta = preguntasGeneradas.idPregunta;
        idReal = "pregunta_"+idPregunta+"_seccion_"+idSeccion;
        eliminarElementoListasRequired(idReal);
        // }
    }

    function agregarElementoLista(elemento, lista) {
        var pos = lista.indexOf(elemento);
        if(pos == -1) {
            lista.push(elemento);
        } 
    }

    function agregarPreguntasGeneradasListaRequired(idSeccion, preguntasGeneradas) {
        if(preguntasGeneradas.requerido) {
            tipo = preguntasGeneradas.tipoPregunta;
            var idReal = "pregunta_"+preguntasGeneradas.idPregunta+"_seccion_"+idSeccion;
            if(tipo.descripcion == "multiple") {
                if(tipo.destinos >1) { 
                    agregarElementoLista(idReal, listMultipleSelectDestino0);
                } else {
                    agregarElementoLista(idReal, listMultipleSelectDestino1);
                }
            } else {
                agregarElementoLista(idReal, listaRespuestasInput);
            }
        }
    }


    function updateStateQuestion(idOpcion, preguntasGeneradas, idSeccion, idPregunta) {
        for(var i = 0; i < preguntasGeneradas.length; i++){
            var question = preguntasGeneradas[i];
            var idDiv = "div_id_"+question.idPreguntaGenerada;
            if (question.opcion.id == idOpcion) {
                updateJsonOfPreguntaGenerada(idSeccion, idPregunta, question, 'block');
                agregarPreguntasGeneradasListaRequired(idSeccion, question.preguntaGenerada);
            } else {
                updateJsonOfPreguntaGenerada(idSeccion, idPregunta, question, 'none');
                quitarPreguntasGeneradasListaRequired(idSeccion, question.preguntaGenerada);
                
            }
            var state = getStatePreguntaGeneradaOfJSON(idSeccion, idPregunta, question);
            if(document.getElementById(idDiv)) {
                document.getElementById(idDiv).style.display = state;
            }
        }
    }

    function blockUnlockQuestion(selector, preguntasGeneradas, idSeccion, idPregunta, opcion = null) {
        for (var i = 0; i < selector.length; i++) {
            if (selector.options[i].selected) {
                updateStateQuestion(selector.options[i].value, preguntasGeneradas, idSeccion, idPregunta);
            }
        }
    }

    function createListFromJSONLista(selector, lista, seleccione) {
        if (seleccione){
            var option = document.createElement("option");
            option.value =  -1;
            option.text = 'Seleccione';
            selector.appendChild(option);
        }
        
        for (var i=0; i < lista.length; i++) {
            var option = document.createElement("option");
            item = lista[i];
            option.value = item.id;
            option.text = item.descripcion;
            option.title = item.descripcion;
            selector.appendChild(option);
        }
        return selector;
    }

    function updateJsonSimple(idSeccion, idPregunta, idRespuesta) {
        var respuesta = $("#"+idRespuesta).val();
        updateJson(idSeccion, idPregunta, respuesta);
    }

    function createSimpleSelector(pregunta, opciones, divElement, idSeccion, preguntasGeneradas, required) {
        
        var selector = document.createElement("select");
        var idSelector = "pregunta_"+pregunta.idPregunta+"_seccion_"+idSeccion;
        selector.id = idSelector;
        if(required == '1'){
            listaRespuestasInput.push("pregunta_"+pregunta.idPregunta+"_seccion_"+idSeccion);
        }
        var selectorModificado = createListFromJSONLista(selector, opciones, true);
        selectorModificado.onchange = function() {updateJsonSimple(idSeccion, pregunta.idPregunta, idSelector);
                                                    if(preguntasGeneradas.length > 0) { 
                                                        blockUnlockQuestion(this, preguntasGeneradas, idSeccion, pregunta.idPregunta);
                                                }};
        if(pregunta.respuesta != "") {
            $(selector).val(pregunta.respuesta);
        }
        divElement.appendChild(selectorModificado);
        return selectorModificado;
    }

    function createMultipleSelector(id, divElement, size, idPregunta, idSeccion) {
        var selector = document.createElement("select");
        selector.name = name;
        idSelector = id+idPregunta+"_seccion_"+idSeccion;
        selector.id = idSelector;
        selector.multiple = true;
        selector.className = "form-control";
        selector.size = size;
        selector.style.marginBottom = "5px";
        var opciones = getOptionsOfMultiSelectOfJson(idSelector, idSeccion, idPregunta);
        var selectorModificado = createListFromJSONLista(selector, opciones, false, null);
        divElement.appendChild(selectorModificado);
    }

    function createDivClass(info, div, id = "") {
        var divClass = document.createElement("Div");
        if(!id == "") {
            divClass.id = id;
        }
        divClass.classList = info;
        div.appendChild(divClass);
        return divClass;
    }

    function obtenerElementosNoSeleccionados(selectOrigen){
        var notSelected = [];
        for (var i = 0; i < selectOrigen.length; i++) {
            if (!selectOrigen.options[i].selected) {
                var array = [];
                array.push(selectOrigen.options[i].value);
                array.push(selectOrigen.options[i].text);
                notSelected.push(array);
            }
        }
        return notSelected;
    }

    function deleteOptionsSelectorOrigen(origin, idPregunta, idSeccion) {
        var selectOrigen = document.getElementById(origin);
        var notSelected = [];
        for (var i = 0; i < selectOrigen.length; i++) {
            if (!selectOrigen.options[i].selected) {
                var array = [];
                array.push(selectOrigen.options[i].value);
                array.push(selectOrigen.options[i].text);
                notSelected.push(array);
            }
        }
        updateSelectAnswerOfJson(origin, notSelected, idSeccion, idPregunta, true);
        removeAllOptionSelector(origin);
        var opciones = getOptionsOfMultiSelectOfJson(origin, idSeccion, idPregunta); 
        createListFromJSONLista(selectOrigen, opciones, false, null);
        return selectOrigen;
    }

    function obtenerElementosSeleccionados(idSelectorOrigen){
        var select1 = document.getElementById(idSelectorOrigen);
        var options = [];
        for (var i = 0; i < select1.length; i++) {
            if (select1.options[i].selected) {
                var array = [];
                array.push(select1.options[i].value);
                array.push(select1.options[i].text);
                options.push(array);
            }
        }
        return options;
    }

    function manageButtons(idPregunta, idSeccion, cantDestinos){
        for(var i=1; i <= cantDestinos; i++){ 
            if($("#destino_0_id_"+idPregunta+"_seccion_"+idSeccion+' option').length == 0){
                $("#button_"+i+"_R_id_"+idPregunta+"_seccion_"+idSeccion).prop('disabled', true);
            } else {
                $("#button_"+i+"_R_id_"+idPregunta+"_seccion_"+idSeccion).prop('disabled', false);
            }
            if($("#destino_"+i+"_id_"+idPregunta+"_seccion_"+idSeccion+' option').length == 0){
                $("#button_"+i+"_L_id_"+idPregunta+"_seccion_"+idSeccion).prop('disabled', true);
            } else {
                $("#button_"+i+"_L_id_"+idPregunta+"_seccion_"+idSeccion).prop('disabled', false);
            }
        }
    }
    
    function insertarElementInSelect(origin, destination, idPregunta, idSeccion, cantDestinos, nroDestino){
        var idSelectorOrigen = origin+idPregunta+"_seccion_"+idSeccion;
        var options = obtenerElementosSeleccionados(idSelectorOrigen);
        var optionOrigin = deleteOptionsSelectorOrigen(idSelectorOrigen, idPregunta, idSeccion);

        var idSelectDestino = destination+idPregunta+"_seccion_"+idSeccion;
        var selectIn = document.getElementById(idSelectDestino);
        
        updateSelectAnswerOfJson(idSelectDestino, options, idSeccion, idPregunta, false);
        var opciones = getOptionsOfMultiSelectOfJson(idSelectDestino, idSeccion, idPregunta);
        removeAllOptionSelector(idSelectDestino);
        createListFromJSONLista(selectIn, opciones, false, null);
        manageButtons(idPregunta, idSeccion, cantDestinos);
    }

    function createButton(infoType, id, title, divElement, icon, disabled, origin, destination, idPregunta, idSeccion, cantDestinos, nroDestino){
        var button = document.createElement("button");
        button.type = infoType;
        button.id = id;
        button.title = title;
        button.className = "btn btn-primary";
        button.textContent = icon;
        button.disabled = disabled;
        button.style.marginTop = "30px";
        button.onclick = function() {insertarElementInSelect(origin, destination, idPregunta, idSeccion, cantDestinos, nroDestino)};
        // var icono = document.createElement("i");
        // icono.className = "fas fa-angle-left";
        // button.appendChild(icono);
        divElement.appendChild(button, id);
    }

    function removeAllOptionSelector(origin){
        $('#'+origin).find('option')
            .remove()
            .end();
    }

    function createDivAlert(div, id){
        var divElement = document.createElement("Div");
        divElement.id = "div_"+id;
        divElement.classList = "alert alert-warning alert-dismissible"
        divElement.style.display = "none";
        div.appendChild(divElement);

        return divElement;
    }
    function createWarningAlert(div, id) {
        var divElement = createDivAlert(div, id);
        var strong = document.createElement("strong");
        var t = document.createTextNode("Debe vaciar la lista de elementos");
        strong.appendChild(t);
        divElement.appendChild(strong);
    }

    function createMultipleSelectorSkeleton(idPregunta, divElement, idSeccion, cantDestinos, required){
        var divRow = createDivClass("row col-sm-9", divElement);
        var div_class_sm_3 = createDivClass("col-sm-5", divRow);
        updateIdDestinoJsonSelectores(idSeccion, idPregunta);

        createTextElement("P", div_class_sm_3, "Disponibles");
        
        var size = 10;
        createMultipleSelector('destino_0_id_', div_class_sm_3, size, idPregunta, idSeccion);

        if (cantDestinos >1) {
            listMultipleSelectDestino0.push('destino_0_id_'+idPregunta+"_seccion_"+idSeccion);
            createWarningAlert(div_class_sm_3, 'destino_0_id_'+idPregunta+"_seccion_"+idSeccion);
            size = 5;
        } else if(required){
            listMultipleSelectDestino1.push('destino_1_id_'+idPregunta+"_seccion_"+idSeccion);
        }

        var div_row_6 = createDivClass("row col-sm-6", divRow);
        var div_class_sm_1 = createDivClass("col-sm-2", div_row_6);
        var div_class_sm_3_2 = createDivClass("col-sm-10", div_row_6);
        for(var i=1; i <= cantDestinos; i++){
            var idSelector = "destino_"+i+"_id_"+idPregunta+"_seccion_"+idSeccion ;
            var opciones = getOptionsOfMultiSelectOfJson(idSelector, idSeccion, idPregunta);
            if(opciones.length > 0) {
                var deshabilitarBotonL = false;
            }
            else {
                var deshabilitarBotonL = true;
            }
            createButton("button", 'button_'+i+'_R_id_'+idPregunta+"_seccion_"+idSeccion, "Añadir seleccionados", div_class_sm_1, ">", false, "destino_0_id_", 'destino_'+i+'_id_', idPregunta,idSeccion, cantDestinos, i);
            createButton("button", 'button_'+i+'_L_id_'+idPregunta+"_seccion_"+idSeccion, "Quitar seleccionados", div_class_sm_1, "<", deshabilitarBotonL, 'destino_'+i+'_id_', "destino_0_id_", idPregunta,idSeccion, cantDestinos, i);

            createTextElement("P", div_class_sm_3_2, destinos[i]);
            createMultipleSelector('destino_'+i+'_id_', div_class_sm_3_2, size, idPregunta, idSeccion);
        }
    }

    function createImage(url, idPregunta, idSeccion){
        ele = document.createElement('img');
        var id = "imagen_pregunta"+idPregunta+"_seccion_"+idSeccion;
        ele.name = id;
        ele.id = id;
        ele.setAttribute("width","160"); 
        ele.setAttribute("height","168");
        return ele;
    }

    function createDivClassWithPadding(info, div) {
        var divElement = document.createElement("Div");
        divElement.className= info;
        divElement.style.padding = "10px";
        div.appendChild(divElement);

        return divElement;
    } 

    function removerDivImagenes(idEle, divButton, divImage, divImageButton, divInput) {
        divButton.removeChild(divButton.lastChild);
        divImage.removeChild(divImage.lastChild);
        divImageButton.removeChild(divImageButton.lastChild);
        divImageButton.removeChild(divImageButton.lastChild);
        divInput.removeChild(divInput.lastChild);
        document.getElementById(idEle).value ='';
    }

    function createButtonForImage(Pregunta, idEle, idSeccion, divImageButton, divImage, divInput, required){
        var divButton = createDivClass("col-sm-1", divImageButton);
        var button = document.createElement("button");
        button.type = "button";
        button.id = "button_"+Pregunta.idPregunta+"_seccion_"+idSeccion;
        button.textContent = "X";
        button.className = "btn btn-danger";
        button.onclick = function() {   removerDivImagenes(idEle, divButton, divImage, divImageButton, divInput);
                                        Pregunta.respuesta = "";  
                                        if((required == '1') && (enEdicion == '2') && (!listaRespuestasInput.includes(idEle))){
                                            listaRespuestasInput.push(idEle);
                                        }
                                    };
        divButton.appendChild(button);
    }

    function createPDF(urlPDF, idPregunta, idSeccion, divImage){
        ele = document.createElement('iframe');
        var id = "pdf_pregunta"+idPregunta+"_seccion_"+idSeccion;
        ele.name = id;
        ele.id = id;
        ele.setAttribute("src", urlPDF); 
        ele.setAttribute("type","application/pdf"); 
        ele.setAttribute("width","160"); 
        ele.setAttribute("height","168");
        divImage.appendChild(ele);
        
        divImage.appendChild(imagen);
        return ele;
    }

    function preview(e, idPregunta, idSeccion, idEle, divImage, tipo) {
        if(e.files && e.files[0])   {
            var reader=new FileReader();
            reader.onload=function(e) {
            var imagen = createImage("", idPregunta, idSeccion);
            $(imagen).attr('src', e.target.result);
            divImage.appendChild(imagen);
        } 
        reader.readAsDataURL(e.files[0]);
        }
    }

    function cargarImagenInsertada(e, idEle, divImagenInput, Pregunta, idSeccion, divInput, required){
        var divImage = document.getElementById("div_imagen_"+idEle);
        
        if(divImage == null){
            var divImageButton = createDivClassWithPadding('form-row', divImagenInput);
            var divImage = createDivClass("col-sm-7 margin-top-10", divImageButton, "div_imagen_"+idEle);
            createButtonForImage(Pregunta, idEle, idSeccion, divImageButton, divImage, divInput, required);
        } else {
            divImage.removeChild(divImage.lastChild);
        }
        preview(e, Pregunta.idPregunta, idSeccion, idEle, divImage);
    }

    function mostrarImagenCargada(pregunta, idSeccion, idEle, divInput, required){
        var divImage = document.getElementById("div_imagen_"+idEle);        
        if(divImage == null){
            var divImageButton = createDivClassWithPadding('form-row', divInput);
            var divImage = createDivClass("col-sm-7", divImageButton, "div_imagen_"+idEle);
            listaDivImagen.push("div_imagen_"+idEle);
            createButtonForImage(pregunta, idEle, idSeccion, divImageButton, divImage, divInput, required);
         }
        var imagen = createImage(pregunta.respuesta, pregunta.idPregunta, idSeccion);
        $(imagen).attr('src', url+'/mostrar_imagen/'+ pregunta.respuesta.id);
         
        updateJson(idSeccion, pregunta.idPregunta, pregunta.respuesta.valor);
        divImage.appendChild(imagen);    
    }

    function cargarImagen(ele, pregunta, idSeccion, divInput, idEle, required) {
        ele.name = "archivo[]";
        ele.type = "file";
        ele.accept="image/png, image/jpeg";
        // ele.placeholder="Search for a file to add"
        listaFileInput.push(idEle);
        divInput.appendChild(ele);
        divInput.style.display = "block";
        if((required == '1') && (enEdicion < '2')){
            listaRespuestasInput.push(idEle);
        }
        if(pregunta.respuesta != "") {
            mostrarImagenCargada(pregunta, idSeccion, idEle, divInput, required);
        } 
        ele.onchange = function() { updateJsonSimple(idSeccion, pregunta.idPregunta, idEle);
                                    cargarImagenInsertada(this, idEle, divInput, pregunta, idSeccion, divInput, required)};
    }

    function cargarPDF(ele, pregunta, idSeccion, idEle, div, required) {
        ele.name = "archivo[]";
        ele.type = "file";
        ele.accept="application/pdf";
        listaFileInput.push(idEle);
        if((required == '1') && (enEdicion < '2')){
            listaRespuestasInput.push(idEle);
        }
        div.appendChild(ele);
        ele.onchange = function() { updateJsonSimple(idSeccion, pregunta.idPregunta, idEle)};
    }

    function cargarInput(ele, pregunta, idSeccion, div, infoType, idEle, required){
        ele.type = infoType;
        ele.name = idEle;
        
        if(pregunta.respuesta != " ") {
            ele.value = pregunta.respuesta;
        }
        if(required == '1'){
            listaRespuestasInput.push(idEle);
        }
        ele.className = "form-control";
        ele.onchange = function() { updateJsonSimple(idSeccion, pregunta.idPregunta, idEle)};
        div.appendChild(ele);
    }

    function createInput(infoType, pregunta, divElement, idSeccion, required){
        ele = document.createElement('input');
        var idEle = "pregunta_"+pregunta.idPregunta+"_seccion_"+idSeccion+"_relevamiento_"+idRelevamiento;
        ele.id = idEle;
    
        var div = createDivClass("text-left", divElement);

        if(infoType == "file_image") {
            cargarImagen(ele, pregunta, idSeccion, div, idEle, required) ;
        } else if (infoType == "file_file"){
            cargarPDF(ele, pregunta, idSeccion, idEle, div, required);
        } else {
            cargarInput(ele, pregunta, idSeccion, div, infoType, idEle, required);
        }
    }  

    function createSelector(item, divElement, idSeccion, divSeccion, required){
        if(item.tipoPregunta.descripcion == 'simple'){
            var opciones = item.opciones;
            var preguntasGeneradas = item.preguntasGeneradas;
            var selector = createSimpleSelector(item, opciones, divElement, idSeccion, preguntasGeneradas, required);
            if(preguntasGeneradas.length > 0) { 
                if(item.respuesta != "") {
                    blockUnlockQuestion(selector, preguntasGeneradas, idSeccion, item.idPregunta, opcion = null)
                } 
                generateQuestionsBlock(preguntasGeneradas, divSeccion, idSeccion);
            }
        } else {
                var cantDestinos = item.cantDestinos;
                createMultipleSelectorSkeleton(item.idPregunta, divElement, idSeccion, cantDestinos, required);  
        } 
    }

    function createTextArea(item, divElement, idSeccion, required){
        var div = createDivClass("col-sm-3 text-right", divElement);
        ele = document.createElement('textarea');
        var id = "pregunta_"+item.idPregunta+"_seccion_"+idSeccion;
        ele.name = id;
        ele.id = id;
        ele.className = "form-control";
        if(item.respuesta != "") {
            ele.val = item.respuesta;
        }
        if(required == '1'){
            listaRespuestasInput.push("pregunta_"+item.idPregunta+"_seccion_"+idSeccion);
        }
        div.appendChild(ele);
        ele.onchange = function() {updateJsonSimple(idSeccion, item.idPregunta, id)};
    }
    
    function createAnswer(item, divElement, idSeccion, divSeccion, required){
        if ((item.tipoPregunta.descripcion == 'simple') || (item.tipoPregunta.descripcion == 'multiple')){
            createSelector(item, divElement, idSeccion, divSeccion, required);
        } else {
            if(item.tipoPregunta.descripcion == 'textarea'){
                createTextArea(item, divElement, idSeccion, required);
            } else {
                createInput(item.tipoPregunta.descripcion, item, divElement, idSeccion, required);
            }
        }
    }

    function createTextElement(type, div, info, required = '0'){
        var element = document.createElement(type);
        var text = document.createTextNode(info);
        if (required == '1') {
            var span = document.createElement("span");
            span.style = "color: #f00;font-weight: bold; font-size: 10pt;";
            span.textContent = "(*) ";
            element.appendChild(span);
        }
        element.appendChild(text);
        div.appendChild(element);
    }

    function createOneQuestion(idSeccion, question, divElement) {
        var div = createDivClassWithPadding('form-row', divElement);

        var required = question.requerido;
        var divText = createDivClass("col-sm-3 text-right", div);
        var text = question.descripcion;
        if(text) text = text+": ";
        createTextElement("P", divText, text, required);

        createAnswer(question, div, idSeccion, divElement, required);
    }

    function createQuestions(item, divElement){
        var questions = item.preguntas;
        //var seccionesPreguntas = item.seccPregunta
        // for (var i = 0; i < seccionesPreguntas.length; i++){
            // var seccionPregunta = seccionesPreguntas[i];
            // var question = seccionPregunta.pregunta;
            // var required = seccionPregunta.requerido;
            // createOneQuestion(item.id, question, divElement, required);
        // }
        for (var i = 0; i < questions.length; i++){
            var question = questions[i];
            createOneQuestion(item.id, question, divElement);
        }
    }

    function crearItemSeccion(item, contenedor, active){
        // Creating a div element
        var divElement = document.createElement("Div");
        divElement.id = "Seccion_id_"+item.id;
        divElement.style.padding = "10px";
        if(active){
            var clases = "form-group tab-pane container active";
        } else {
            var clases = "form-group tab-pane container fade";
        }
        divElement.classList= clases;
        divElement.style.textAlign = "lefth";

        var divSeccion = createDivClass("row", divElement);
        var div_class_sm_4 = createDivClass("col-sm-4", divSeccion);
        createTextElement("h5", div_class_sm_4, item.descripcion);

        createQuestions(item, divElement);
        contenedor.appendChild(divElement);
        
        return divElement;
    }

    function createLiNav(navPills, item, active) {
        var liNav = document.createElement("li");
        
        liNav.className = "nav-item";
        navPills.appendChild(liNav);

        var aNav = document.createElement("a");
        aNav.href = "#Seccion_id_"+item.id;
        if(active) {
            aNav.classList="nav-link active";
        } else {
            aNav.classList="nav-link";
        }
        aNav.classList="nav-link";
        aNav.setAttribute("data-toggle", "tab");
        aNav.setAttribute("name", "Seccion_id_"+item.id);
        
        liNav.appendChild(aNav);

        createTextElement("p", aNav, item.nombre);
    }

    function construirSecciones(childs, contenedor){
        var navPills = document.createElement("ul");
        navPills.classList = "nav nav-tabs";
        contenedor.appendChild(navPills);

        createLiNav(navPills, childs[0], true);

        for (var j = 1; j < childs.length; j++){
            var item = childs[j];
            createLiNav(navPills, item, false);  
        }

        var divElement = document.createElement("Div");
        divElement.classList="tab-content";
        contenedor.appendChild(divElement);

        var item = childs[0];
        var itemSeccion = crearItemSeccion(item, contenedor, true);
        divElement.appendChild(itemSeccion);

        for (var i = 1; i < childs.length; i++){
            var item = childs[i];
            var itemSeccion = crearItemSeccion(item, contenedor, false);
            divElement.appendChild(itemSeccion);
        }
    }

    function getNombreSeccion(idSeccion) {
        secciones = formulario.secciones;
        for (var i = 0; i < secciones.length; i++) {
            var seccion = secciones[i];
            if(seccion.id == idSeccion) {
                return seccion.nombre;
            }
        }
    }

    function validarSelectMultiplesDestinosVacio() {
        var output = [];
        for (var i = 0; i < listMultipleSelectDestino0.length; i++){ 
            var value = $("#"+listMultipleSelectDestino0[i]+' option').length;
            if (value > 0) {
                document.getElementById("div_"+listMultipleSelectDestino0[i]).style.display = "block";
                var idSeccion = listMultipleSelectDestino0[i].split("_", 6)[5];
                var nombreSeccion = getNombreSeccion(idSeccion);
                if (! output.includes(nombreSeccion)) {
                    output.push(nombreSeccion);
                } 
            } else {
                document.getElementById("div_"+listMultipleSelectDestino0[i]).style.display = "none";
            }
        }
        return output;
    }

    function validarSelectMultiplesSeleccionado() {
        var output = [];
        for (var i = 0; i < listMultipleSelectDestino1.length; i++){ 
            var value = $("#"+listMultipleSelectDestino1[i]+' option').length;
            if (value == 0) {
                var idSeccion = listMultipleSelectDestino1[i].split("_", 6)[5];
                var nombreSeccion = getNombreSeccion(idSeccion);
                if (! output.includes(nombreSeccion)) {
                    output.push(nombreSeccion);
                } 
            }
        }
        return output;
    }

    function concatenarArreglosSinRepetidos(list1, list2) {
        output = list1;
        for (var i = 0; i < list2.length; i++){ 
            if (! output.includes(list2[i])) {
                    output.push(list2[i]);
            } 
        }
        return output;
    }

    function obtenerSeccionesSinResponder() {
        var list1 = validarSelectMultiplesSeleccionado();
        var list2 = validarSelectMultiplesDestinosVacio();
        var output = concatenarArreglosSinRepetidos(list1, list2);
        for (var i = 0; i < listaRespuestasInput.length; i++){ 
            var value = $("#"+listaRespuestasInput[i]).val();
            if((value == "") || (value == -1)) {
                var idSeccion = listaRespuestasInput[i].split("_", 4)[3];
                var nombreSeccion = getNombreSeccion(idSeccion); 
                if (! output.includes(nombreSeccion)) {
                    output.push(nombreSeccion);
                }
            }
        }
        return output;
    }

    function mostrarCartelErrorSubmit(secciones) {
        swal({
            type: 'error',
            title: 'Faltan responder preguntas',
            text: 'Responda las preguntas de las secciones : '+secciones.join(", "),
        })
    }

    function validarPreguntas(){
        var secciones = obtenerSeccionesSinResponder();
        console.log(secciones);
        if(secciones.length > 0) {
            mostrarCartelErrorSubmit(secciones);
            return false;
        } 
        return true;
    }

    function updateInput() {
        var data = JSON.stringify(formulario);
        var archivos = JSON.stringify(listaFileInput);
        $("#JsonData").val(data);
        $("#archivos").val(archivos);        
        console.log($("#JsonData").val());

        if (validarPreguntas()) {
            $("#formFormulario").submit();
        }
    }

    function createFormulario(){
        var contenedor = document.getElementById("divFormulario");

        var divFormulario = document.createElement("Div");
        divFormulario.id = "Formulario_id_"+formulario.idFormulario;
        divFormulario.className="container";
        divFormulario.style.paddingTop = "10px";
        createTextElement("h4", divFormulario, formulario.descripcion);
        contenedor.appendChild(divFormulario);

        construirSecciones(formulario.secciones, divFormulario);
    }

    function verificarMostrarBotonGuardar(){
        for (var i = 0; i < arrAccionesDisponibles.length; i++){
            var boton = arrAccionesDisponibles[i];

            if (boton.jsFunction === 'updateInput()'){
                $('#'+boton.idHTMLElement).prop('disabled', false);
                $('#'+boton.idHTMLElement).show();
            }
        }
    }

    createFormulario();
    
    $( document ).ready(function() {
        verificarMostrarBotonGuardar();
    });

</script>



